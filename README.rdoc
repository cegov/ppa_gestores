DEADLINES:
Páginas "Sobre" e "Início", editáveis e protegidas com sistema de login, ficarão prontas para o dia 10/4.
As páginas Cursos, Notícias, Eventos e FAQ ficam prontas para 18/4. 

---------------------
TO DO


OK traduzir as seeds do banco de dados

ajustar campo resumo na parte administrativa de newsarticles, ver limite de caracteres (255? 128? um tweet?)

programar os links de acessibilidade 

programar os links de alto contraste

tratar campos null e blank nas views

BUG: não é possível editar/deletar páginas criadas
O problema: o animal que programou o cms decidiu usar cabala SQL ao invés de usar ids únicos
Agora o sistema não encontra a tradução da página criada porque o locale é diferente:
View:
 NoMethodError in Refinery/admin/pages#edit

Showing /home/deployer/.rvm/gems/ruby-2.0.0-p451/gems/refinerycms-pages-2.1.2/app/views/refinery/admin/pages/_form.html.erb where line #2 raised:

undefined method `persisted?' for nil:NilClass

Extracted source (around line #2):

1: <%= form_for [refinery, :admin, @page],
2:              :url => (refinery.admin_page_path(@page.nested_url) if @page.persisted?) do |f| %>
3: 
4:   <%= render '/refinery/admin/error_messages', :object => @page, :include_object_name => true %>
5: 

Backend:
Refinery::Page Load (0.5ms)  SELECT `refinery_pages`.* 
	FROM `refinery_pages` INNER JOIN `refinery_page_translations` 
	ON `refinery_page_translations`.`refinery_page_id` = `refinery_pages`.`id` 
	WHERE `refinery_pages`.`parent_id` IS NULL AND `refinery_page_translations`.`locale` 
	IN ('en') AND `refinery_page_translations`.`slug` = 'dara-erro' LIMIT 1
solução: trocando in ('en') por in ('pt-BR') deve solucionar essa ganbiarra deles	

programar a busca?

---------------------
TO implement / fix / etc

Criar páginas Cursos, notícias, eventos e FAQ

O sistema deve previnir que o usuário manipule URLs para chegar a notícias que não foram publicadas
Traduzir o conteúdo da seed antes de fazer o deploy
Criar relação has_many/belong_to entre os recursos criados e refinery_user
Consertar bug que mostra diversas entradas para os roles do usuário quando se trata dos recursos criados
Extender model/controller para sempre mostrar news na barra lateral
Implementar if/else na view que considera se is_active ou is_published está setado
Criar migration para renomear campo user_id do model Course para refinery_user_id
Criar keys na db para agilizar as buscas
--------------------

DONE:
OK CMS
OK default de linguagens é em pt-BR
OK criar página início com texto qq
OK criar página sobre com texto qq
OK fazer sistema para transferência de imagens
OK fazer sistema para transferência de arquivos
OK fazer sistema de gerenciamento de usuários e contas
OK fazer dashboard com mudanças recentes feitas nas páginas do site pelo Gestor de Conteúdo

OK fazer o override das views do CMS para integrar o HTML já criado 
OK instalar o twitter bootstrap
OK reescrever o html do header para integrar Twitter bootstrap e Refinery CMS
OK reescrever o html do footer para integrar Twitter bootstrap e Refinery CMS
OK transferir imagens para se adequar ao layout 3 do Guia de Estilos de sites do governo
OK adequar CSS/less com o override do Twitter bootstrap: 
OK  reescrever o html do body#content para integrar Twitter bootstrap e Refinery CMS
OK  reescrever o html do body#side_bar para integrar Twitter bootstrap e Refinery CMS
OK escrever método para colocar os glyphs do font awesome 
OK achar uma forma de fazer os links das páginas aparecerem automaticamente no menu
OK mudar a cor de page title, é um link agora, tem que mudar a cor de hover na mixin

TO-DO-LIST: fazer a seção cursos
OK Create model and database:
	Model Course
	name:string
	user_id:integer
	is_active:boolean
	description:text
	duration_quantity:integer
	duration_type:string		
	classes_start_on:date
	classes_end_on:date
	created_on:date
	updated_on:date	
OK Create a gem to encapsulate the code
OK Create a rails engine refinery-course
OK Translate the en.yml file
OK Create a tab on the menu
OK Override the layout to show only fields with meaning to the user
Create model filters to prevent user abuse
OK FIX: Bootstrap css does not load on Refinery adminarea
OK FIX: Título do plugin está em inglês

OK Criar eventos e notícias:

TO-DO-LIST: fazer a seção noticias
OK Create model and database:
	Model News	
	refinery_user_id:integer
	headline:string	
	lead:string
	byline:string
	photo:image	
	story:text
	event_date:date
	is_published:boolean			
	created_on:date
	updated_on:date	
OK Create a gem to encapsulate the code
OK Create a rails engine refinery-course
OK Translate the en.yml file
OK Create a tab on the menu
OK Override the layout to show only fields with meaning to the user

OK Criar FAQ:

OK TO-DO-LIST: fazer a seção noticias
OK Create model and database:
	Model faqs	
	refinery_user_id:integer
	question:string	
	answer:string	
	is_published:boolean			
	created_on:date
	updated_on:date	
OK Create a gem to encapsulate the code
OK Create a rails engine refinery-course
OK Translate the en.yml file
OK Create a tab on the menu
OK Override the layout to show only fields with meaning to the user
OK Editar index, show nas views do dir refinery e editar _form das views de admin

OK: fazer com que as notícias apareçam sempre na barra lateral
OK extender o controller para pegar as notícias do banco de dados
OK criar um decorator ao invés de fazer override do controller
OK Criar before_filters para as engines criadas para pegar os artigos de notícias do db
OK mover para uma partial o menu lateral

OK ordem dos links na barra de links não pode ser reordenada pela interface :/
Problema: o cms não guarda position para essas coisas, assim como o faz para a posição dos plugins.
Ele pega os links através desse método: Refinery::Menu.new(Refinery::Page.menu_pages.reorder('created_at ASC')
Adicionei o reorder para pelo menos colocar em ordem de criação